# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# ---
# apiVersion: cert-manager.io/v1
# kind: Certificate
# metadata:
#   name: wallabag
# spec:
#   secretName: wallabag-lukcic-pl-ssl-cert
#   issuerRef:
#     name: cloudflare-cluster-issuer
#     kind: ClusterIssuer
#   dnsNames:
#     - wallabag.lukcic.pl



# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: "wallabag/wallabag"
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "2.6.13"

redis:
  repository: redis
  tag: alpine
  port: 6379

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
  annotationsHttp:
    traefik.ingress.kubernetes.io/router.entrypoints: web
    traefik.ingress.kubernetes.io/router.middlewares: kube-system-https-redirect@kubernetescrd    
  hosts:
    - host: wallabag.lukcic.pl
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: "2000m"
    memory: "2Gi"
  requests:
    cpu: "1000m"
    memory: "1Gi"

config:
  SYMFONY__ENV__DATABASE_DRIVER: pdo_pgsql
  SYMFONY__ENV__DATABASE_HOST: "192.168.254.70"
  SYMFONY__ENV__DATABASE_PORT: "5432"
  SYMFONY__ENV__DATABASE_NAME: wallabag_test
  SYMFONY__ENV__MAILER_DSN: smtp://127.0.0.1
  SYMFONY__ENV__FROM_EMAIL: wallabag@example.com
  SYMFONY__ENV__DOMAIN_NAME: https://wallabag.lukcic.pl
  SYMFONY__ENV__SERVER_NAME: "lukcic's wallabag"
  SYMFONY__ENV__REDIS_HOST: wallabag-redis
  SYMFONY__ENV__DATABASE_TABLE_PREFIX: "wallabag_"
  POPULATE_DATABASE: "false"

secrets:
  SYMFONY__ENV__DATABASE_USER: "d2FsbGFiYWc="
  SYMFONY__ENV__DATABASE_PASSWORD: "d2FsbGFiYWc="

# # This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

# # This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
#   # targetMemoryUtilizationPercentage: 80

# # Additional volumes on the output Deployment definition.
# volumes: []
# # - name: foo
# #   secret:
# #     secretName: mysecret
# #     optional: false

# # Additional volumeMounts on the output Deployment definition.
# volumeMounts: []
# # - name: foo
# #   mountPath: "/etc/foo"
# #   readOnly: true

# nodeSelector: {}

# tolerations: []

# affinity: {}
